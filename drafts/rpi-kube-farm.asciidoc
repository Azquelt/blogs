---
layout: post
title: "Building a Kubernetes Cluster on a Raspberry Pi Official Way"
categories: blog
author_picture: https://avatars3.githubusercontent.com/tomjenningss
author_github: https://github.com/tomjenningss
seo-title: Reactive messaging between microservices with MicroProfile on Open Liberty 19.0.0.9 - OpenLiberty.io
seo-description: MicroProfile Reactive Messaging provides an easy way to send and receive messages within and between microservices using Kafka message brokers. Also introduces easier testing of your data source connections in Liberty apps with REST APIs, and some updates to OpenID Connect Server.
blog_description: "MicroProfile Reactive Messaging provides an easy way to send and receive messages within and between microservices using Kafka message brokers. Also introduces easier testing of your data source connections in Liberty apps with REST APIs, and some updates to OpenID Connect Server."
---
= Building a Kubernetes Cluster on a Raspberry Pi: Official Way
Tom Jennings <https://github.com/tomjenningss>

I suggest taking the time to read and fully understand the way Kubernetes works, because following a blog, not fully understand it, you will spend more time doing something wrong then if you just did the education to start off with to understand it.

There are a lot of blogs and guides on how to create a Kubernetes cluster on a Raspberry Pi. There is a lot of copying and pasting a set of commands into a terminal and just running them without any real explanation of what was going on and where they are coming from. 

 ---

== Contents:



* <<prereq,Prerequisites - what you need>>
* <<KandC,Understanding Kubernetes and Concepts>>
* <<KCoRPI,Creating a Kubernetes cluster on a Raspberry Pi>>


[#prereq]
== Prerequesits

What you need to create a Raspberry Pi Kubernetes cluster is:

==== Hardware:

* Three link:/https://www.amazon.co.uk/Raspberry-Pi-3-Model-B/dp/B07BDR5PDW/ref=sr_1_3?keywords=raspberry+pi+3b%2B&qid=1568804412&s=gateway&sr=8-3[ Raspberry Pi 3 Model B+]


* Two link:/https://www.amazon.co.uk/Anker-PowerCore-20100-20000mAh-Technology-Black/dp/B00VJSGT2A/ref=sr_1_5?crid=37HTN71P9O4DJ&keywords=anker+power+bank&qid=1568804550&s=gateway&sprefix=Anker+%2Caps%2C144&sr=8-5[Anker Ultra High Capacity Power Bank]


* Four link:/https://www.amazon.co.uk/Anker-PowerCore-20100-20000mAh-Technology-Black/dp/B00VJSGT2A/ref=sr_1_5?crid=37HTN71P9O4DJ&keywords=anker+power+bank&qid=1568804550&s=gateway&sprefix=Anker+%2Caps%2C144&sr=8-5[32GB MicroSD Cards]

* Four link:/https://www.amazon.co.uk/CABEPOW-Braided-Android-Charging-Motorola-3Pack-3M/dp/B07L1HDW4P/ref=sr_1_3?keywords=4+pack+red+cables+Micro+USB+cabepow&qid=1568807361&s=gateway&sr=8-3[Micro USB Cables]

* Router

==== Software:

* link:/https://www.balena.io/etcher/[BalenaEtcher]

* link:/https://www.docker.com/[Docker]

* link:/https://https://www.raspberrypi.org/downloads/raspbian/[
Raspbian Buster with desktop and recommended software]

[#KandC]
== Understanding Kubernetes

Kubernetes is open source [free], container orchestration tool to manage and deploy Docker images to a cluster. 

I would recommend knowing the terminology, especially the difference between Pods, Nodes and Clusters.

Core basic terminology needed without having to read through the whole Kubernetes Documentation to find out what you need for.

* Cluster

A cluster is a set of computers (Raspberry Pi's) that run containerised applications, managed by Kubernetes. A Kubernetes cluster can have a minimum of one worker node and one master node.

* Pods

A pod represents a set of containers running in your cluster. 

(Diagram of pod)

* Replica Set

ReplicaSet ensures that the specified number of pod replicas wanted are running at one time. 

* Images

The instance of a container that holds a set of software needed to run an application

* Containers

A container is an executable image that contains the software to run the application.

* Docker 

Docker is open source software that containerises your applications for you, so you can run it on a Kubernetes cluster. This is what the application sits on. 

* Kubernetes Master

When you want to control the Kubernetes cluster, everything is done through the Master. 


The Kubernetes Master tells the Nodes what to do, and gives the Nodes the work that is set for them.


When Kubernetes was first released, nodes were called slaves, as a slave is told what to do and is set work.


[#KCoRPI]
== Creating a Kubernetes Cluster on a Raspberry Pi


.1. Open balena etcher select the image, click select target image to check whether it is the right MicroSD card, and click flash. Do that four times for each Node.

<image>


.2. Configure all Four Raspberry Pi's 

Set up the configuration for the Raspberry Pi, plug the RPI into a monitor and follow the on screen set up instructions, and configure WIFI connection and when naming the Raspberry Pi's call them Master, Node1, Node2, Node3, as when you SSH into them from your laptop they will be called Master, Node1, Node2, Node3.

<image>

.3. SSH into the Raspberry Pi. Enable SSH on the RPI Desktop by going to:
* `Preferences` and select `Raspberry Pi Configuration` 

* `Interfaces` and select `Enabled` next to SSH

.4. Open the Terminal, and type `ifconfig` (InterFace CONFIGurator). It will display the IP address needed to SSH into the Raspberry Pi.

.5. Ensure you are on the same WIFI network as the Raspberry Pi. 

.7. SSH into the Pi:
`ssh pi@<ip_address>`

`eg: ssh pi@192.168.0.1`

.7. Very Important: Set static IP address' 

When the RPI shuts down the Router will give the RPI a different IP address, and it will not work.

To set static IP on Raspbian Buster:

`sudo nano /etc/dhcpcd.conf` 

`interface eth0 static ip_address=192.168.1.XX/24 static routers=192.168.1.1 static domain_name_servers=192.168.1.1.`

`sudo reboot`


.8. Docker

There is a script to install Docker on ARM, for convenience which installs all the dependencies.

`$ curl -fsSL get.docker.com | sudo bash`

If you would like to know what the flag -fsSL is click link:/https://explainshell.com/explain?cmd=curl+-fsSLp[here]

.9. Disable swapoff 

Swapoff disables devices and files for paging and swapping. Kubernetes needs to disable swapoff primarily for performance. if you do not disable swapoff, it will fail the pre-flight checks, and you will not be able to create the Kube-cluster.

`sudo dphys-swapfile swapoff`

`sudo swapon summary`


.10. Edit the boot file

`sudo nano /boot/cmdline.txt`

On the end of the text file, add. Do not add a new line to the text file, add it to the end of the file.

`cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory`


`sudo reboot`










